>>> import importlib.util
>>> module_name = '2-matrix_divided'
>>> file_path = './2-matrix_divided.py'
>>> spec = importlib.util.spec_from_file_location(module_name, file_path)
>>> module = importlib.util.module_from_spec(spec)
>>> spec.loader.exec_module(module)
>>> matrix_divided = module.matrix_divided

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], ["hello", 2, 2]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "Hello")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3, 5],[4, 5, 6]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]